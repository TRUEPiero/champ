Функция ОбъектВСтрокуJSON(Объект)

	ЗаписьJSON = Новый ЗаписьJSON;
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(,Символы.Таб);
	ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
	ЗаписатьJSON(ЗаписьJSON,Объект);
	СтрокаJSON = ЗаписьJSON.Закрыть();	
	
	Возврат СтрокаJSON;
	
КонецФункции

Функция СтрокаJSONвОбъект(СтрокаJSON)

	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	ОбъектИзJSON = ПрочитатьJSON(ЧтениеJSON, Истина);
	ЧтениеJSON.Закрыть();
	
	Возврат ОбъектИзJSON;

КонецФункции



//формирование ответа для http-сервисов
Функция СформироватьОтветGET(Документ) ЭКспорт
	
	Попытка
	
		Если Документ.Пустая() ИЛИ Документ = Неопределено Тогда
			Возврат НеуспешныйОтвет();
		КонецЕсли;	                             
		
		СтруктураОтвета = СформироватьСтруктуруОтвета(Документ);
		СтруктураОтвета.message = "Успешно";	
		Возврат ОбъектВСтрокуJSON(СтруктураОтвета);
		
	Исключение
		
		Возврат "Выполнить запрос не удалось по причине: " + ОписаниеОшибки();
		
	КонецПопытки;

КонецФункции

Функция СформироватьОтветDELETE(Документ) ЭКспорт
	Попытка
		
		Если Документ.Пустая() ИЛИ Документ = Неопределено Тогда
			Возврат НеуспешныйОтвет();
		КонецЕсли;	
		
		Если Документ.ПометкаУдаления Тогда
			СтруктураОтвета = СформироватьСтруктуруОтвета(Документ);
			СтруктураОтвета.message = "Документ уже помечен на удаление";
			Возврат ОбъектВСтрокуJSON(СтруктураОтвета); 
		КонецЕсли;                                     
		
		оДокумент = Документ.ПолучитьОбъект();
		оДокумент.УстановитьПометкуУдаления(Истина);
		оДокумент.Записать(РежимЗаписиДокумента.Запись);
		
		СтруктураОтвета = СформироватьСтруктуруОтвета(оДокумент.Ссылка);
		СтруктураОтвета.message = "Успешно";
		Возврат ОбъектВСтрокуJSON(СтруктураОтвета);
	
	Исключение
	    Возврат "Выполнить запрос не удалось по причине: " + ОписаниеОшибки();
	КонецПопытки;
	
КонецФункции

Функция СформироватьОтветPATCH(Документ) Экспорт

	Попытка
		
		Если Документ.Пустая() ИЛИ Документ = Неопределено Тогда
			Возврат НеуспешныйОтвет();
		КонецЕсли;
		
		оДокумент = Документ.ПолучитьОбъект();
		оДокумент.УстановитьПометкуУдаления(Ложь); 
		
		Если оДокумент.Проведен Тогда
			СтруктураОтвета = СформироватьСтруктуруОтвета(Документ);
			СтруктураОтвета.message = "Документ уже проведен";
			Возврат ОбъектВСтрокуJSON(СтруктураОтвета);
		Иначе
			оДокумент.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;                                     
		
		СтруктураОтвета = СформироватьСтруктуруОтвета(оДокумент.Ссылка);
		СтруктураОтвета.message = "Успешно";
		Возврат ОбъектВСтрокуJSON(СтруктураОтвета);	
	
	Исключение
	    Возврат "Выполнить запрос не удалось по причине: " + ОписаниеОшибки();
	КонецПопытки;	

КонецФункции 

Функция СформироватьОтветPOST(ТелоЗапроса) Экспорт

//{
//        "Номер": "ЦБ-000001",
//        "Сотрудник": "Михайлов Стас Олегович",
//        "ТипЗаявки": "Аванс",
//        "Отдел": "Первый ",
//        "Руководитель": "Иванов Иван Иванович",
//        "НачалоОтгула": "01.01.0001 0:00:00",
//        "КонецОтгула": "01.01.0001 0:00:00",
//        "Сумма": "12 349 812"
//}

	
	Попытка

		СтруктураЗапроса = СтрокаJSONвОбъект(ТелоЗапроса);
		
		нДокумент = Документы.Заявки.СоздатьДокумент();
		нДокумент.Номер 		= СтруктураЗапроса["Номер"];
		нДокумент.Дата 			= ТекущаяДата();
		нДокумент.ТипЗаявки 	= Перечисления.ТипыЗаявок[СтруктураЗапроса["ТипЗаявки"]];
		нДокумент.С 			= Дата(СтруктураЗапроса["НачалоОтгула"]);
		нДокумент.КонецПериода 	= Дата(СтруктураЗапроса["КонецОтгула"]);
		нДокумент.Сумма 		= Число(СтруктураЗапроса["Сумма"]);
		
		нДокумент.Руководитель 	= ВыборкаРуководителя(СтруктураЗапроса["Руководитель"]);
		нДокумент.Отдел 		= ВыборкаОтдела(СтруктураЗапроса["Отдел"],нДокумент.Руководитель);
		нДокумент.Сотрудник 	= ВыборкаСотрудника(СтруктураЗапроса["Сотрудник"],нДокумент.Отдел); 
		
		нДокумент.Записать(РежимЗаписиДокумента.Запись);	
		
		СтруктураОтвета = СформироватьСтруктуруОтвета(нДокумент.Ссылка);
		СтруктураОтвета.message = "Успешно!";
		Возврат ОбъектВСтрокуJSON(СтруктураОтвета);

	Исключение	
		Возврат "Выполнить запрос не удалось по причине: " + ОписаниеОшибки();	
	КонецПопытки;
	
КонецФункции 

Функция СформироватьОтветPUT(Документ, ТелоЗапроса)Экспорт	
//{
//        "Номер": "ЦБ-000001",
//        "Сотрудник": "Михайлов Стас Олегович",
//        "ТипЗаявки": "Аванс",
//        "Отдел": "Первый ",
//        "Руководитель": "Иванов Иван Иванович",
//        "НачалоОтгула": "01.01.0001 0:00:00",
//        "КонецОтгула": "01.01.0001 0:00:00",
//        "Сумма": "12 349 812"
//}

	Попытка
	
		Если Документ.Пустая() ИЛИ Документ = Неопределено Тогда
			Возврат НеуспешныйОтвет();
		КонецЕсли;
		
		СтруктураЗапроса = СтрокаJSONвОбъект(ТелоЗапроса);
		
		оДокумент = Документ.ПолучитьОбъект();
		оДокумент.Номер			= СтруктураЗапроса["Номер"];
		оДокумент.ТипЗаявки 	= Перечисления.ТипыЗаявок[СтруктураЗапроса["ТипЗаявки"]];
		оДокумент.С 			= Дата(СтруктураЗапроса["НачалоОтгула"]);
		оДокумент.КонецПериода 	= Дата(СтруктураЗапроса["КонецОтгула"]);
		оДокумент.Сумма 		= Число(СтруктураЗапроса["Сумма"]);
		оДокумент.ПометкаУдаления = Ложь;
		оДокумент.Руководитель 	= ВыборкаРуководителя(СтруктураЗапроса["Руководитель"]);
		оДокумент.Отдел 		= ВыборкаОтдела(СтруктураЗапроса["Отдел"],оДокумент.Руководитель);
		оДокумент.Сотрудник 	= ВыборкаСотрудника(СтруктураЗапроса["Сотрудник"], оДокумент.Отдел); 
		
		оДокумент.Записать(РежимЗаписиДокумента.Запись);
		
		СтруктураОтвета = СформироватьСтруктуруОтвета(оДокумент.Ссылка);
		СтруктураОтвета.message = "Успешно!";
		Возврат ОбъектВСтрокуJSON(СтруктураОтвета);
		
	Исключение
		
	   	Возврат "Не удалось по причине: " + ОписаниеОшибки();
		
	КонецПопытки;
	
КонецФункции 


//Создать необходимые объекты метаданных
Функция ВыборкаРуководителя(НаименованиеРукводителя)

	СущРуководитель = Справочники.РуководителиОтделов.НайтиПоНаименованию(НаименованиеРукводителя);
	
	Если СущРуководитель.Пустая() Тогда
		нРуководитель = Справочники.РуководителиОтделов.СоздатьЭлемент();
		нРуководитель.Наименование = НаименованиеРукводителя;
		нРуководитель.Записать();
		Возврат нРуководитель.Ссылка;
	КонецЕсли;                
	
	Возврат СущРуководитель;

КонецФункции 

Функция ВыборкаОтдела(НаименованиеОтдела, РуководительСсылка) 

	СущОтдел = Справочники.Отделы.НайтиПоНаименованию(НаименованиеОтдела);
	Если СущОтдел.Пустая() Тогда			
		нОтдел = Справочники.Отделы.СоздатьЭлемент();
		нОтдел.Наименование = НаименованиеОтдела;
		нОтдел.Руководителль = РуководительСсылка;
		нОтдел.Записать();
		Возврат нОтдел.Ссылка;
	КонецЕсли;
	
	Возврат СущОтдел;
	
КонецФункции 

Функция ВыборкаСотрудника(НаименованиеСотрудника, ОтделСсылка)
	
	СущСотрудник = Справочники.Сотрудники.НайтиПоНаименованию(НаименованиеСотрудника);
	Если СущСотрудник.Пустая() Тогда			
		нСотрудник = Справочники.Сотрудники.СоздатьЭлемент();
		нСотрудник.Наименование = НаименованиеСотрудника;
		нСотрудник.Отдел = ОтделСсылка;
		нСотрудник.Записать();
		Возврат нСотрудник.Ссылка;
	КонецЕсли;
	
	Возврат СущСотрудник;
	
КонецФункции 

Функция НеуспешныйОтвет()

	рСтруктура = Новый Структура;
	рСтруктура.Вставить("result", "Невалидный номер документа");
	
	Возврат	ОбъектВСтрокуJSON(рСтруктура);

КонецФункции 

Функция СформироватьСтруктуруОтвета(Документ)

	СтруктураТела = Новый Структура;
	СтруктураТела.Вставить("Номер",Строка(Документ.Номер));
	СтруктураТела.Вставить("Дата", Строка(Документ.Дата));  
	СтруктураТела.Вставить("ПометкаУдаления", Строка(Документ.ПометкаУдаления));
	СтруктураТела.Вставить("Проведен", Строка(Документ.Проведен));
	СтруктураТела.Вставить("Сотрудник",Строка(Документ.Сотрудник));
	СтруктураТела.Вставить("ТипЗаявки",Строка(Документ.ТипЗаявки));  
	СтруктураТела.Вставить("Отдел",Строка(Документ.Отдел));
	СтруктураТела.Вставить("Руководитель",Строка(Документ.Руководитель));
	СтруктураТела.Вставить("НачалоОтгула",Строка(Документ.С));
	СтруктураТела.Вставить("КонецОтгула",Строка(Документ.КонецПериода));
	СтруктураТела.Вставить("Сумма",Строка(Документ.Сумма));
	
	СтруктураОтвета = Новый Структура; 
	СтруктураОтвета.Вставить("message", "");
	СтруктураОтвета.Вставить("result", СтруктураТела);	
	
	Возврат СтруктураОтвета;
	
КонецФункции // ()

