
&НаКлиенте
Процедура GET(Команда)
	GETНаСервере();
КонецПроцедуры

&НаСервере
Процедура GETНаСервере()
	
	Соединение = Новый HTTPСоединение("192.168.0.6", 80);
	
	Запрос = Новый HTTPЗапрос("/http/hs/Test/request?id=" + Номер);
	
	Попытка
	
		Ответ = Соединение.ВызватьHTTPМетод("GET", Запрос)
	
	Исключение
	   	Сообщить("Установить соединение не получилось по причине: " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;                                         
	
	Если Ответ.КодСостояния = 200 Тогда
		
		СтрокаОтвета = Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
		СтруктураОтвета = API_Mobile.СтрокаJSONВОбъект(СтрокаОтвета);
		ТелоОтвета = СтруктураОтвета["result"];

		Если ТипЗнч(ТелоОтвета) = Тип("Строка") Тогда	
			Сообщить(ТелоОтвета);
			Возврат;
		КонецЕсли;		
		
		сДокумент = СоздатьЗаявкуПрограммно(ТелоОтвета);
		
		Сообщить("Документ - " + сДокумент + Символы.ПС + API_Mobile.ОбъектВСтрокуJSON(ТелоОтвета));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура DELETE(Команда)
	DELETEНаСервере();
КонецПроцедуры

&НаСервере
Процедура DELETEНаСервере()
	
	Соединение = Новый HTTPСоединение("192.168.0.6", 80);
	
	Запрос = Новый HTTPЗапрос("/http/hs/Test/request?id=" + Номер1);
	
	Попытка
	
		Ответ = Соединение.ВызватьHTTPМетод("DELETE", Запрос)
	
	Исключение
	   	Сообщить("Установить соединение не получилось по причине: " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если Ответ.КодСостояния = 200 Тогда
		
		СтрокаОтвета = Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
		СтруктураОтвета = API_Mobile.СтрокаJSONВОбъект(СтрокаОтвета);
		ТелоОтвета = СтруктураОтвета["result"];

		Если ТипЗнч(ТелоОтвета) = Тип("Строка") Тогда	
			Сообщить(ТелоОтвета);
			Возврат;
		КонецЕсли;		
		
		сДокумент = СоздатьЗаявкуПрограммно(ТелоОтвета);
		оДокумент = сДокумент.ПолучитьОбъект();
		оДокумент.ПометкаУдаления = Истина;
		оДокумент.Записать(РежимЗаписиДокумента.Запись);
		
		Сообщить("Документ - " + сДокумент + Символы.ПС + API_Mobile.ОбъектВСтрокуJSON(ТелоОтвета));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура PATCH(Команда)
	PATCHНаСервере();
КонецПроцедуры

&НаСервере
Процедура PATCHНаСервере()
	
	Соединение = Новый HTTPСоединение("192.168.0.6", 80);
	
	Запрос = Новый HTTPЗапрос("/http/hs/Test/request?id=" + Номер);
	
	Попытка
	
		Ответ = Соединение.ВызватьHTTPМетод("DELETE", Запрос)
	
	Исключение
	   	Сообщить("Установить соединение не получилось по причине: " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если Ответ.КодСостояния = 200 Тогда
		
		СтрокаОтвета = Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
		СтруктураОтвета = API_Mobile.СтрокаJSONВОбъект(СтрокаОтвета);
		ТелоОтвета = СтруктураОтвета["result"];

		Если ТипЗнч(ТелоОтвета) = Тип("Строка") Тогда	
			Сообщить(ТелоОтвета);
			Возврат;
		КонецЕсли;		
		
		сДокумент = СоздатьЗаявкуПрограммно(ТелоОтвета);
		оДокумент = сДокумент.ПолучитьОбъект();
		оДокумент.ПометкаУдаления = Ложь;
		оДокумент.Записать(РежимЗаписиДокумента.Проведение);
		
		Сообщить("Документ - " + сДокумент + Символы.ПС + API_Mobile.ОбъектВСтрокуJSON(ТелоОтвета));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура POST(Команда)
	POSTНаСервере();
КонецПроцедуры
 
&НаСервере
Процедура POSTНаСервере()

//{
//    "Номер": "М1-000004",
//    "Сотрудник": "Туда-Сюда Егор Васильевич",
//    "ТипЗаявки": "Аванс",
//    "Отдел": "Второй",
//    "Руководитель": "Суетолов Андрей Евгеньеви",
//    "НачалоОтгула": "01.01.0001 0:00:00",
//    "КонецОтгула": "01.01.0001 0:00:00",
//    "Сумма": "2003909"
//}	
	
	Соединение = Новый HTTPСоединение("192.168.0.6", 80);
	
	Запрос = Новый HTTPЗапрос("/http/hs/Test/request?id=" + Номер);
	
	СтруктураТелаЗапроса = Новый Структура;
	СтруктураТелаЗапроса.Вставить("Номер", Номер);
	СтруктураТелаЗапроса.Вставить("Дата", Строка(Дата));
	СтруктураТелаЗапроса.Вставить("Сотрудник", Сотрудник.Наименование);
	СтруктураТелаЗапроса.Вставить("ТипЗаявки", Строка(ВидЗаявки));
	СтруктураТелаЗапроса.Вставить("Отдел", Отдел.Наименование);
	СтруктураТелаЗапроса.Вставить("Руководитель", Руководитель.Наименование);
	СтруктураТелаЗапроса.Вставить("НачалоОтгула", Строка(НачалоПериода));
	СтруктураТелаЗапроса.Вставить("КонецОтгула", Строка(КонецПериода));
	СтруктураТелаЗапроса.Вставить("Сумма", Строка(Сумма));
	
	ТелоКакСтрока = API_Mobile.ОбъектВСтрокуJSON(СтруктураТелаЗапроса);	
	
	Запрос.УстановитьТелоИзСтроки(ТелоКакСтрока,КодировкаТекста.UTF8);
	
	Попытка
	
		Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос)
	
	Исключение
	   	Сообщить("Установить соединение не получилось по причине: " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если Ответ.КодСостояния = 200 Тогда
		сДокумент = СоздатьЗаявкуПрограммно(СтруктураТелаЗапроса);
		Сообщить("Документ - " + сДокумент + Символы.ПС + API_Mobile.ОбъектВСтрокуJSON(СтруктураТелаЗапроса));
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура PUT(Команда)
	PUTНаСервере();
КонецПроцедуры

&НаСервере
Процедура PUTНаСервере()
	//{
	//    "Номер": "М1-000004",
	//    "Сотрудник": "Туда-Сюда Егор Васильевич",
	//    "ТипЗаявки": "Аванс",
	//    "Отдел": "Второй",
	//    "Руководитель": "Суетолов Андрей Евгеньеви",
	//    "НачалоОтгула": "01.01.0001 0:00:00",
	//    "КонецОтгула": "01.01.0001 0:00:00",
	//    "Сумма": "2003909"
	//}	
	
	Соединение = Новый HTTPСоединение("192.168.0.6", 80);
	
	Запрос = Новый HTTPЗапрос("/http/hs/Test/request?id=" + Номер);
	
	СтруктураТелаЗапроса = Новый Структура;
	СтруктураТелаЗапроса.Вставить("Номер", Номер);
	СтруктураТелаЗапроса.Вставить("Дата", Строка(Дата));
	СтруктураТелаЗапроса.Вставить("Сотрудник", Сотрудник.Наименование);
	СтруктураТелаЗапроса.Вставить("ТипЗаявки", Строка(ВидЗаявки));
	СтруктураТелаЗапроса.Вставить("Отдел", Отдел.Наименование);
	СтруктураТелаЗапроса.Вставить("Руководитель", Руководитель.Наименование);
	СтруктураТелаЗапроса.Вставить("НачалоОтгула", Строка(НачалоПериода));
	СтруктураТелаЗапроса.Вставить("КонецОтгула", Строка(КонецПериода));
	СтруктураТелаЗапроса.Вставить("Сумма", Строка(Сумма));
	
	ТелоКакСтрока = API_Mobile.ОбъектВСтрокуJSON(СтруктураТелаЗапроса);	
	
	Запрос.УстановитьТелоИзСтроки(ТелоКакСтрока,КодировкаТекста.UTF8);
	
	Попытка
		
		Ответ = Соединение.ВызватьHTTPМетод("PUT", Запрос)
		
	Исключение
		Сообщить("Установить соединение не получилось по причине: " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если Ответ.КодСостояния = 200 Тогда
		
		СтрокаОтвета = Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
		СтруктураОтвета = API_Mobile.СтрокаJSONВОбъект(СтрокаОтвета);
		ТелоОтвета = СтруктураОтвета["result"];

		Если ТипЗнч(ТелоОтвета) = Тип("Строка") Тогда	
			Сообщить(ТелоОтвета);
			Возврат;
		КонецЕсли;
		
		сДокумент = ИзменитьЗаявкуПрограммно(СтруктураТелаЗапроса);
		Сообщить("Документ - " + сДокумент + Символы.ПС + API_Mobile.ОбъектВСтрокуJSON(СтруктураТелаЗапроса));
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ИзменитьЗаявкуПрограммно(ТелоОтвета)

	СущДокумент = Документы.Заявки.НайтиПоНомеру(ТелоОтвета["Номер"]);
	
	Если НЕ СущДокумент.Пустая() Тогда
		
		оДокумент = СущДокумент.ПолучитьОбъект();
		оДокумент.Номер = ТелоОтвета["Номер"];
		оДокумент.Дата = Дата(ТелоОтвета["Дата"]);
		оДокумент.ТипЗаявки = Перечисления.ТипыЗаявок[ТелоОтвета["ТипЗаявки"]];
		оДокумент.С = Дата(ТелоОтвета["НачалоОтгула"]);
		оДокумент.КонецПериода = Дата(ТелоОтвета["КонецОтгула"]);
		оДокумент.Сумма = Число(ТелоОтвета["Сумма"]);
		оДокумент.ПометкаУдаления = Ложь;
		оДокумент.Руководитель 	= ВыборкаРуководителя(ТелоОтвета["Руководитель"]);
		оДокумент.Отдел 		= ВыборкаОтдела(ТелоОтвета["Отдел"],оДокумент.Руководитель);
		оДокумент.Сотрудник 	= ВыборкаСотрудника(ТелоОтвета["Сотрудник"],оДокумент.Отдел);
		
		оДокумент.Записать(РежимЗаписиДокумента.Запись, РежимПроведенияДокумента.Неоперативный);
		
		Возврат оДокумент.Ссылка;
	КонецЕсли;
	
	нДокумент = Документы.Заявки.СоздатьДокумент();
	нДокумент.Номер = ТелоОтвета["Номер"];
	нДокумент.Дата = Дата(ТелоОтвета["Дата"]);
	нДокумент.ТипЗаявки = Перечисления.ТипыЗаявок[ТелоОтвета["ТипЗаявки"]];
	нДокумент.С = Дата(ТелоОтвета["НачалоОтгула"]);
	нДокумент.КонецПериода = Дата(ТелоОтвета["КонецОтгула"]);
	нДокумент.Сумма = Число(ТелоОтвета["Сумма"]);
	
	нДокумент.Руководитель 	= ВыборкаРуководителя(ТелоОтвета["Руководитель"]);
	нДокумент.Отдел 		= ВыборкаОтдела(ТелоОтвета["Отдел"],нДокумент.Руководитель);
	нДокумент.Сотрудник 	= ВыборкаСотрудника(ТелоОтвета["Сотрудник"],нДокумент.Отдел);
	
	нДокумент.Записать(РежимЗаписиДокумента.Запись, РежимПроведенияДокумента.Неоперативный);
	
	Возврат нДокумент.Ссылка;	

КонецФункции

&НаСервере
Функция СоздатьЗаявкуПрограммно(ТелоОтвета)

	СущДокумент = Документы.Заявки.НайтиПоНомеру(ТелоОтвета["Номер"]);
	
	Если НЕ СущДокумент.Пустая() Тогда
		Возврат СущДокумент.Ссылка;	
	КонецЕсли;
	
	нДокумент = Документы.Заявки.СоздатьДокумент();
	нДокумент.Номер = ТелоОтвета["Номер"];
	нДокумент.Дата = Дата(ТелоОтвета["Дата"]);
	нДокумент.ТипЗаявки = Перечисления.ТипыЗаявок[ТелоОтвета["ТипЗаявки"]];
	нДокумент.С = Дата(ТелоОтвета["НачалоОтгула"]);
	нДокумент.КонецПериода = Дата(ТелоОтвета["КонецОтгула"]);
	нДокумент.Сумма = Число(ТелоОтвета["Сумма"]);
	
	нДокумент.Руководитель 	= ВыборкаРуководителя(ТелоОтвета["Руководитель"]);
	нДокумент.Отдел 		= ВыборкаОтдела(ТелоОтвета["Отдел"],нДокумент.Руководитель);
	нДокумент.Сотрудник 	= ВыборкаСотрудника(ТелоОтвета["Сотрудник"],нДокумент.Отдел);
	
	нДокумент.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат нДокумент.Ссылка;
	
КонецФункции // ()

&НаСервере
Функция ВыборкаРуководителя(НаименованиеРукводителя)

	СущРуководитель = Справочники.РуководителиОтделов.НайтиПоНаименованию(НаименованиеРукводителя);
	
	Если СущРуководитель.Пустая() Тогда
		нРуководитель = Справочники.РуководителиОтделов.СоздатьЭлемент();
		нРуководитель.Наименование = НаименованиеРукводителя;
		нРуководитель.Записать();
		Возврат нРуководитель.Ссылка;
	КонецЕсли;                
	
	Возврат СущРуководитель;

КонецФункции 

&НаСервере
Функция ВыборкаОтдела(НаименованиеОтдела, РуководительСсылка) 

	СущОтдел = Справочники.Отделы.НайтиПоНаименованию(НаименованиеОтдела);
	Если СущОтдел.Пустая() Тогда			
		нОтдел = Справочники.Отделы.СоздатьЭлемент();
		нОтдел.Наименование = НаименованиеОтдела;
		нОтдел.Руководителль = РуководительСсылка;
		нОтдел.Записать();
		Возврат нОтдел.Ссылка;
	КонецЕсли;
	
	Возврат СущОтдел;
	
КонецФункции 

&НаСервере
Функция ВыборкаСотрудника(НаименованиеСотрудника, ОтделСсылка)
	
	СущСотрудник = Справочники.Сотрудники.НайтиПоНаименованию(НаименованиеСотрудника);
	Если СущСотрудник.Пустая() Тогда			
		нСотрудник = Справочники.Сотрудники.СоздатьЭлемент();
		нСотрудник.Наименование = НаименованиеСотрудника;
		нСотрудник.Отдел = ОтделСсылка;
		нСотрудник.Записать();
		Возврат нСотрудник.Ссылка;
	КонецЕсли;
	
	Возврат СущСотрудник;
	
КонецФункции 









